unit Model.Entities.Customer;



interface

uses
Datasnap.DBClient,
Data.DB,
System.SysUtils, System.Classes;


type
TCustomer = class

  private
    F_customerID: Integer;
    F_fname: string;
    F_lname: string;
    F_dbirth: tDateTime;
    F_postcode: string;
    F_address: string;
    F_addressl2: string;
    F_dregister: tDateTime;

    function getCustomerID: Integer;
    function getFName: string;
    function getLName: string;
    function getPostCode: string;
    function getDBirth: tdatetime;
    function getAddress: string;
    function getAddressl2: string;
    function getDRegister: tdatetime;

  public
    constructor Create();
    destructor  Destroy; override;

    Property CustomerID: Integer  read getCustomerID write F_customerID;
    Property FName: String        read getFName      write F_fname;
    Property LName: String        read getLName      write F_lname;
    Property DBirth: tdatetime    read getDBirth     write F_dbirth;
    Property PostCode: String     read getPostCode   write F_postcode;
    Property Address: String      read getAddress    write F_address;
    Property Addressl2: String    read getAddressl2  write F_addressl2;
    Property DRegister: tdatetime read getDRegister  write F_dregister;

end;

implementation
{ TCategoria }

constructor TCustomer.Create;
begin

end;

destructor TCustomer.Destroy;
begin

  inherited;
end;

function TCustomer.getCustomerID: Integer;
begin
if F_CustomerID <=0 then
    raise Exception.Create('Inform customer code');
  Result := F_CustomerID;
end;

function TCustomer.getFName: string;
begin
  if trim(F_fname) = '' then
    raise Exception.Create('Enter the customer s name');

  Result := F_fname;
end;

function TCustomer.getAddress: string;
begin
  if trim(F_address) = '' then
    raise Exception.Create('Inform the address:');

  Result := F_address;

end;

function TCustomer.getAddressl2: string;
begin
  Result := F_addressl2;

end;

function TCustomer.getLName: string;
begin
  if trim(F_lname) = '' then
    raise Exception.Create('informe o sobrenome');

  Result := F_lname;

end;


function TCustomer.getPostCode: string;
begin
  if trim(F_postcode) = '' then
    raise Exception.Create('informe o postcode');

  Result := F_postcode;

end;

function TCustomer.getDBirth: tdatetime;
begin
//verificar

  if F_dbirth = 0 then
    raise Exception.Create('informe o data de nascimento');

  Result := F_dbirth;

end;

function TCustomer.getDRegister: tdatetime;
begin
//verificar
//  if trim(F_dregister) = '' then
//    raise Exception.Create('informe o sobrenome');

  Result := F_dregister;

end;

end.
